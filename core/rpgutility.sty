\ExplSyntaxOn

\input{core/lowlevel/regex}
\input{core/lowlevel/ordinal.tex}
\input{core/lowlevel/misc}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Dice macro
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\DeclareDocumentCommand{ \RpgDiceFormat} {m m m}
{
	%Arguments: #1: Dice Number, #2: Dice Sides, #3: Modifier

	%Declare the command here, wait for themes to override it. 
}

\DeclareDocumentCommand { \RpgDice } { m }
{
	%%Parses input of the form { #d# | d# | #d# ± # | d# ± #}
	%%Final argument (the ± term) can be arbitrary arithmetic statements
	%%Passes the output to RpgDiceFormat
	\__rpg_dice_parse:n {#1}
	
	%%Parsing function defined in lowlevel/regex
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Text Formatting
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%Pluralises words based on the tokens
\NewDocumentCommand{\RpgPlural}{o m m }
{
	% #1: override plural (replaces +s) #2 count #3 word/phrase to be checked
	\int_compare:nTF {#2  = 1 }
	{
		1~#3
	}
	{
		\IfNoValueTF{#1}
		{
			#2~#3s
		}
		{
			#2~#1
		}
	}
}

% takes an integer and outputs the ordinal text
% internal functions defined in lowlevel/ordinal.tex
\NewExpandableDocumentCommand{\RpgOrdinal}{o m}
{
    % Output the number first
    \int_to_arabic:n { #2 }
	%then the calculated suffix
	\IfNoValueTF{#1}
	{
		\__compute_ordinal_suffix:n { #2 }
	}
	{
		%Allow for arbitrary token insertion between the two (i.e. for formatting)
		#1{\__compute_ordinal_suffix:n { #2 }}
	}
}




